Begin parsing... programs/newton.cpp

Program (abstract syntax): 
  Declarations: 
    Declarations = {<a, float>, <x, float>, <result, float>}
  Block: 
    Assignment: 
      Variable: a
      FloatValue: 625.0
    Assignment: 
      Variable: x
      FloatValue: 1.0
    Loop: 
      Binary: 
        Operator: ||
        Binary: 
          Operator: >
          Binary: 
            Operator: *
            Variable: x
            Variable: x
          Binary: 
            Operator: +
            Variable: a
            FloatValue: 1.0E-4
        Binary: 
          Operator: <
          Binary: 
            Operator: *
            Variable: x
            Variable: x
          Binary: 
            Operator: -
            Variable: a
            FloatValue: 1.0E-4
      Assignment: 
        Variable: x
        Binary: 
          Operator: /
          Binary: 
            Operator: +
            Variable: x
            Binary: 
              Operator: /
              Variable: a
              Variable: x
          FloatValue: 2.0
    Assignment: 
      Variable: result
      Variable: x

Begin type checking...

Type map:
{ <result, float>, <a, float>, <x, float> }

Transformed Abstract Syntax Tree

Program (abstract syntax): 
  Declarations: 
    Declarations = {<a, float>, <x, float>, <result, float>}
  Block: 
    Assignment: 
      Variable: a
      FloatValue: 625.0
    Assignment: 
      Variable: x
      FloatValue: 1.0
    Loop: 
      Binary: 
        Operator: ||
        Binary: 
          Operator: FLOAT>
          Binary: 
            Operator: FLOAT*
            Variable: x
            Variable: x
          Binary: 
            Operator: FLOAT+
            Variable: a
            FloatValue: 1.0E-4
        Binary: 
          Operator: FLOAT<
          Binary: 
            Operator: FLOAT*
            Variable: x
            Variable: x
          Binary: 
            Operator: FLOAT-
            Variable: a
            FloatValue: 1.0E-4
      Assignment: 
        Variable: x
        Binary: 
          Operator: FLOAT/
          Binary: 
            Operator: FLOAT+
            Variable: x
            Binary: 
              Operator: FLOAT/
              Variable: a
              Variable: x
          FloatValue: 2.0
    Assignment: 
      Variable: result
      Variable: x

Begin interpreting... programs/newton.cpp

Final State

Environment:

    VariableRef  MemoryAddr  MemoryValue(from Memory)
    result       8           25.0
    a            0           625.0
    x            4           25.0

Memory:

  Static area:
    MemoryAddr  VarRef(from Env)  Type     MemoryValue

  Runtime Stack area:
    MemoryAddr  VarRef(from Env)  Type     MemoryValue
    0           a                 float    625.0
    4           x                 float    25.0
    8           result            float    25.0

  Heap area:
    MemoryAddr  VarRef(from Env)  Type     MemoryValue
