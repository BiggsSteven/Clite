run:
Begin parsing... programs/evenodd.cpp

Program (abstract syntax): 
  Declarations: 
    Declarations = {<n, int>, <result, int>}
  Block: 
    Assignment: 
      Variable: n
      IntValue: 10
    Conditional: 
      Binary: 
        Operator: ==
        Binary: 
          Operator: %
          Variable: n
          IntValue: 2
        IntValue: 0
      Assignment: 
        Variable: result
        IntValue: 0
      Assignment: 
        Variable: result
        IntValue: 1

Begin type checking...

Type map:
{ <result, int>, <n, int> }

Transformed Abstract Syntax Tree

Program (abstract syntax): 
  Declarations: 
    Declarations = {<n, int>, <result, int>}
  Block: 
    Assignment: 
      Variable: n
      IntValue: 10
    Conditional: 
      Binary: 
        Operator: INT==
        Binary: 
          Operator: INT%
          Variable: n
          IntValue: 2
        IntValue: 0
      Assignment: 
        Variable: result
        IntValue: 0
      Assignment: 
        Variable: result
        IntValue: 1

Begin interpreting...programs/evenodd.cpp

Final State
{ <result, 0>, <n, 10> }
